C51 COMPILER V7.08   TIMER                                                                 10/03/2015 23:33:08 PAGE 1   


C51 COMPILER V7.08, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN .\timer.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\source\timer.c BROWSE INCDIR(../include/) DEBUG OBJECTEXTEND PRINT(.\tim
                    -er.lst) OBJECT(.\timer.obj)

line level    source

   1          
   2          /*************  功能说明        **************
   3          
   4          本文件为STC15xxx系列的定时器初始化和中断程序,用户可以在这个文件中修改自己需要的中断程序.
   5          
   6          
   7          ******************************************/
   8          
   9          
  10          
  11          #include        "timer.h"
  12          
  13          static void (* timer0_isr)(void);
  14          static void (* timer1_isr)(void);
  15          
  16          /********************* Timer0中断函数************************/
  17          void timer0_int (void) interrupt TIMER0_VECTOR
  18          {
  19   1          if (timer0_isr)     timer0_isr();
  20   1      }
  21          
  22          /********************* Timer1中断函数************************/
  23          void timer1_int (void) interrupt TIMER1_VECTOR
  24          {
  25   1          if (timer1_isr)     timer1_isr();
  26   1      }
  27          
  28          /********************* Timer2中断函数************************/
  29          void timer2_int (void) interrupt TIMER2_VECTOR
  30          {
  31   1      
  32   1      }
  33          
  34          
  35          //========================================================================
  36          // 函数: u8     Timer_Inilize(u8 TIM, TIM_InitTypeDef *TIMx)
  37          // 描述: 定时器初始化程序.
  38          // 参数: TIMx: 结构参数,请参考timer.h里的定义.
  39          // 返回: 成功返回0, 空操作返回1,错误返回2.
  40          // 版本: V1.0, 2012-10-22
  41          //========================================================================
  42          u8      Timer_Inilize(u8 TIM, TIM_InitTypeDef *TIMx)
  43          {
  44   1          if(TIM > Timer2)    return 1;       //空操作
  45   1      
  46   1          if(TIM == Timer0) {
  47   2              TR0 = 0;                //停止计数
  48   2              timer0_isr = TIMx->TIM_Isr;
  49   2              if(TIMx->TIM_Interrupt == ENABLE)               ET0 = 1;        //允许中断
  50   2              else                                                                    ET0 = 0;        //禁止中断
  51   2              if(TIMx->TIM_Polity == PolityHigh)              PT0 = 1;        //高优先级中断
  52   2              else                                                                    PT0 = 0;        //低优先级中断
  53   2              if(TIMx->TIM_Mode >  TIM_16BitAutoReloadNoMask) return 2;       //错误
  54   2              TMOD = (TMOD & ~0x03) | TIMx->TIM_Mode; //工作模式,0: 16位自动重装, 1: 16位定时/计数, 2: 8位自动重
C51 COMPILER V7.08   TIMER                                                                 10/03/2015 23:33:08 PAGE 2   

             -装, 3: 16位自动重装, 不可屏蔽中断
  55   2              if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)        AUXR &= ~0x80;  //12T
  56   2              if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)         AUXR |=  0x80;  //1T
  57   2              if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)        TMOD |=  0x04;  //对外计数或分频
  58   2              else                                                                            TMOD &= ~0x04;  //定时
  59   2              if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x01;      //输出时钟
  60   2              else                                                    INT_CLKO &= ~0x01;      //不输出时钟
  61   2      
  62   2              TH0 = (u8)(TIMx->TIM_Value >> 8);
  63   2              TL0 = (u8)TIMx->TIM_Value;
  64   2              if(TIMx->TIM_Run == ENABLE)     TR0 = 1;        //开始运行
  65   2              return  0;              //成功
  66   2          }
  67   1      
  68   1          if(TIM == Timer1) {
  69   2              TR1 = 0;                //停止计数
  70   2              timer1_isr = TIMx->TIM_Isr;
  71   2              if(TIMx->TIM_Interrupt == ENABLE)               ET1 = 1;        //允许中断
  72   2              else                                                                    ET1 = 0;        //禁止中断
  73   2              if(TIMx->TIM_Polity == PolityHigh)              PT1 = 1;        //高优先级中断
  74   2              else                                                                    PT1 = 0;        //低优先级中断
  75   2              if(TIMx->TIM_Mode >= TIM_16BitAutoReloadNoMask) return 2;       //错误
  76   2              TMOD = (TMOD & ~0x30) | TIMx->TIM_Mode; //工作模式,0: 16位自动重装, 1: 16位定时/计数, 2: 8位自动重
             -装
  77   2              if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)        AUXR &= ~0x40;  //12T
  78   2              if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)         AUXR |=  0x40;  //1T
  79   2              if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)        TMOD |=  0x40;  //对外计数或分频
  80   2              else                                                                            TMOD &= ~0x40;  //定时
  81   2              if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x02;      //输出时钟
  82   2              else                                                    INT_CLKO &= ~0x02;      //不输出时钟
  83   2      
  84   2              TH1 = (u8)(TIMx->TIM_Value >> 8);
  85   2              TL1 = (u8)TIMx->TIM_Value;
  86   2              if(TIMx->TIM_Run == ENABLE)     TR1 = 1;        //开始运行
  87   2              return  0;              //成功
  88   2          }
  89   1      
  90   1          if(TIM == Timer2) { //Timer2,固定为16位自动重装, 中断无优先级
  91   2              AUXR &= ~(1<<4);        //停止计数
  92   2              if(TIMx->TIM_Interrupt == ENABLE)                       IE2  |=  (1<<2);        //允许中断
  93   2              else                                                                            IE2  &= ~(1<<2);        //禁止中断
  94   2              if(TIMx->TIM_ClkSource >  TIM_CLOCK_Ext)        return 2;
  95   2              if(TIMx->TIM_ClkSource == TIM_CLOCK_12T)        AUXR &= ~(1<<2);        //12T
  96   2              if(TIMx->TIM_ClkSource == TIM_CLOCK_1T)         AUXR |=  (1<<2);        //1T
  97   2              if(TIMx->TIM_ClkSource == TIM_CLOCK_Ext)        AUXR |=  (1<<3);        //对外计数或分频
  98   2              else                                                                            AUXR &= ~(1<<3);        //定时
  99   2              if(TIMx->TIM_ClkOut == ENABLE)  INT_CLKO |=  0x04;      //输出时钟
 100   2              else                                                    INT_CLKO &= ~0x04;      //不输出时钟
 101   2      
 102   2              TH2 = (u8)(TIMx->TIM_Value >> 8);
 103   2              TL2 = (u8)TIMx->TIM_Value;
 104   2              if(TIMx->TIM_Run == ENABLE)     AUXR |=  (1<<4);        //开始运行
 105   2              return  0;              //成功
 106   2          }
 107   1          return 2;   //错误
 108   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    642    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V7.08   TIMER                                                                 10/03/2015 23:33:08 PAGE 3   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
